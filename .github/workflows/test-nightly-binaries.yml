name: test-nightly-binaries
on: 
  workflow_dispatch:
  push:

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        module: [
          alexnet_demo_cpu,
          # bert_demo, # tests disabled until the OOM issue is resolved
          #image_segmentation_with_ivy_unet_cpu, # tests disabled until we get cuda installation working in the docker image
          # mmpretrain_to_jax, # tests disabled until we get cuda installation working in the docker image
          resnet_demo_cpu,
          #torch_to_jax_cpu, # tests disabled until we get cuda installation working in the docker image
          lstm_tensorflow_to_torch_cpu,
          lstm_torch_to_tensorflow_cpu,
          # dinov2_to_paddle, # tests disabled until we get cuda installation working in the docker image
          #convnext_to_torch_cpu, # tests disabled until we get cuda installation working in the docker image
          # xgboost_demo, # tests disabled until we get the csv files uploaded to drive for being used in the tests
        ]

    steps:
        - name: Clean repository
          run:
            sudo rm -fr $GITHUB_WORKSPACE && mkdir $GITHUB_WORKSPACE

        - name: Checkout DemosðŸ›Ž
          uses: actions/checkout@v4
          with:
            repository: ivy-llc/demos
            path: demos
            persist-credentials: false
            submodules: "recursive"
            fetch-depth: 1

        - name: Checkout IvyðŸ›Ž
          uses: actions/checkout@v4
          with:
            repository: ivy-llc/ivy
            path: ivy
            persist-credentials: false
            submodules: "recursive"
            fetch-depth: 1
  
        - name: Run Integration Tests for Enterprise Demos
          run: |
            docker pull transpileai/ivy:latest
            docker run --rm -v "$(pwd)"/demos:/ivy/demos -v "$(pwd)"/ivy:/ivy/ivy transpileai/ivy:latest demos/tests/test_demos.sh examples_and_demos/${{ matrix.module }}.ipynb true true
